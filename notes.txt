"# SQLki" 
select avg(id) from uzytkownicy;
count
sum
avg
max
min
select *, 'test' from uzytkownicy ;
select imie, count(imie) from uzytkownicy group by imie;
select id as identyfikator, imie, nazwisko from uzytkownicy;
select (imie || ' ' || nazwisko) as imie_nazw from uzytkownicy;



create table wojewodztwo(
    id serial primary key,
    nazwa varchar(30) not null
);
insert into wojewodztwo values (default, 'mazowieckie');
insert into wojewodztwo values (default, 'podlaskie');
insert into wojewodztwo values (default, 'zachodniopomorskie');
insert into wojewodztwo values (default, 'malopolskie');

create table miasto(
    id serial,
    nazwa varchar(30) not null,
    id_wojewodztwo integer references wojewodztwo (id)
);

insert into miasto values (default, 'Warszawa', 1);
insert into miasto values (default, 'Plock', 1);
insert into miasto values (default, 'Bialystok', 2);
insert into miasto values (default, 'Szczecin', 3);
insert into miasto values (default, 'Krakow', 4);
insert into miasto values (default, 'Tarnow', 4);
insert into miasto values (default, 'Nowy Dwor Maz', 1);


alter table uzytkownicy add column id_miasto integer;

select * from uzytkownicy;



truncate uzytkownicy restart identity;

insert into uzytkownicy values(default, 'Wojtek', 'Potocki', 'wpotocki', 1);
insert into uzytkownicy values(default, 'Jan', 'Kowalski', 'jkowal', 1);
insert into uzytkownicy values(default, 'Ewa', null, 'ewa90', 3);
insert into uzytkownicy values(default, 'Ewa', 'Kowal', 'ewa9', 6);
insert into uzytkownicy values(default, 'Adam', 'Nowak', 'xxx', 7);


select 
  miasto.nazwa, wojewodztwo.nazwa
from 
    miasto, wojewodztwo  
where 
    miasto.id_wojewodztwo = wojewodztwo.id;
    
 -----------------------------------
    
select 
  miasto.nazwa, wojewodztwo.nazwa, uzytkownicy.imie
from 
    miasto, wojewodztwo, uzytkownicy  
where 
    (miasto.id_wojewodztwo = wojewodztwo.id) AND (uzytkownicy.id_miasto = miasto.id); 
-----------------------------	    
    
select nazwa from miasto where miasto.id not in (select distinct id_miasto from uzytkownicy);

--albo to samo:

select m.nazwa from miasto m where not exists (
    select * from uzytkownicy u where m.id = u.id_miasto
);

select 
  wojewodztwo.nazwa
from 
    wojewodztwo  
where 
    (miasto.id_wojewodztwo = wojewodztwo.id) AND (uzytkownicy.id_miasto = miasto.id) AND wojewodztwo.id not in ; 
---------------------------------

select nazwa from wojewodztwo w where w.id not in(
    select m.id_wojewodztwo from miasto m where exists(
        select u.id_miasto from uzytkownicy u where u.id_miasto = m.id
    )
);
----------------------------------

select * from wojewodztwo w left join miasto m on w.id =m.id_wojewodztwo;

select * from uzytkownicy u left join miasto m on u.id-miasto=m.id;

--------------------------------------------------------------------------------------------------------------------------------------
-- 1. wyświetl podsumowanie ile książek jest z danej kategorii sortując malejąco po ilości książek

select count(ks.id_kategoria) as suma, nazwa from kategorie ka join ksiazki ks on ka.id_kategoria = ks.id_kategoria group by ka.id_kategoria order by suma desc;


--------------------------------------------
 -- 2. książki, którego autora były najczęściej wypożyczane i ile razy (wyświetl top 5)
 
 select imie, nazwisko,count(*) as ile from wypozyczenia 
		join ksiazki on wypozyczenia.id_ksiazka=ksiazki.id_ksiazka
		join autorzy on ksiazki.id_autor=autorzy.id_autor group by imie, nazwisko
		order by ile desc;
----------------------------------------------------------------
-- 3. które książki były najczęściej wypożyczane

select tytul, count(*) from wypozyczenia 
	join ksiazki on wypozyczenia.id_ksiazka = ksiazki.id_ksiazka
	group by tytul
	order by count desc;
 --------------------------------------------------------   
    

-- 4. który czytelnik nie wypożyczył żadnej książki?


---------------------------------------------------------------------------------------

-- 5. ile książek średnio wypożyczył jeden czytelnik (wynik zaokrąglij do 2 miejsc po przecinku)

-- 6. wyświetl wypożyczenia zwrócone po terminie (termin oddanie to 30 dni od wypożyczenia): login czytelnika | tytuł książki | ile dni po terminie zwrócone (posortuj po ilości dni po terminie malejąco)

-- 7. wyświetl: nazwa wydawnictwa | ilość książek | ilość kategorii | ilość wypożyczeń - posortuj alfabetycznie po wydawnictwie   
    
